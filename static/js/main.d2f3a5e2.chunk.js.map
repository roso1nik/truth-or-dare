{"version":3,"sources":["routes/consts.js","components/pages/ErrorPage.jsx","context/index.js","functions/getRandomInt.js","static/modes.js","components/UI/AlertDialogSlideIcon.jsx","components/pages/Start.jsx","components/UI/ChooserVariant.jsx","static/penalty_modes.js","components/pages/Game.jsx","components/pages/AboutPage.jsx","routes/routes.js","components/AppRouter.jsx","components/UI/FooterOnPage.jsx","App.js","index.js"],"names":["GAME_ROUTE","ErrorPage","history","useNavigate","react_default","a","createElement","Container","maxWidth","sx","my","className","Alert","severity","Button","variant","onClick","appContext","createContext","getRandomInt","min","max","Math","ceil","floor","random","modes","name","value","emoji","People_default","Whatshot_default","DashboardCustomize_default","Transition","React","props","ref","react","Slide","Object","assign","direction","AlertDialogSlideIcon","_ref","icon","title","textTITLE","textDESC","_React$useState","_React$useState2","slicedToArray","open","setOpen","handleClose","Tooltip","arrow","IconButton","Dialog","TransitionComponent","keepMounted","onClose","aria-describedby","DialogTitle","concat","DialogContent","DialogActions","Start","_useContext","useContext","setFastType","fastType","_useContext2","gameType","setGameType","_useContext3","penalty","setPenalty","_useContext4","setText","text","setChoose","choose","setWhoStart","textWhoStart","_useContext5","setPlayerStepNow","customQuestion","setCustomQuestion","customAction","setCustomAction","playerStepNow","showPenalty","setShowPenaltyDefault","setShowPenalty","showPenaltyDefault","startGame","type","i","whostart","length","chooseStartMessage","console","log","ToggleButtonGroup","color","exclusive","onChange","event","newGameType","map","mode","ToggleButton","key","Share_default","ChooserVariant","players","setPlayers","setTextPenalty","textPenalty","customPenalty","setCustomPenalty","chooseVariant","questions","classic","choosePenalty","party","actions","penaltys","light","hard","penalty_modes","Game","russianGameType","_useState","useState","_useState2","showPenaltyBool","setShowPenaltyBool","handleShowPenalty","_useState3","_useState4","inputValue","setInputValue","_useState5","_useState6","inputValueQuestion","setInputValueQuestion","_useState7","_useState8","inputValueAction","setInputValueAction","_useState9","_useState10","inputValuePenalty","setInputValuePenalty","window","addEventListener","preventDefault","returnValue","placement","Home_default","Settings_default","Chip","label","Fragment","undefined","ml","UI_ChooserVariant","Switch","checked","question","placeholder","e","target","toConsumableArray","action","player","AboutPage","href","rel","publicRoutes","path","Component","pages_Start","pages_ErrorPage","pages_Game","pages_AboutPage","AppRouter","react_router","route","element","exact","replace","to","FooterOnPage","Box","startIcon","HelpOutline_default","App","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","Provider","react_router_dom","components_AppRouter","UI_FooterOnPage","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"6NAEaA,EAAa,mCC2BXC,EAvBG,WACd,IAAMC,EAAUC,cAEhB,OACIC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,SAAS,KACTC,GAAI,CAACC,GAAI,GACTC,UAAU,WAEVP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOC,SAAS,SAAhB,sJACAT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,QAAQ,WACRC,QAAS,kBAAMd,EDnBJ,MCoBXO,GAAI,CAACC,GAAI,IAHb,wJCfHO,EAAaC,wBAAc,MCFzB,SAASC,EAAaC,EAAKC,GAGtC,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,iECE5CM,EAAQ,CACjB,CACIC,KAAM,6CACNC,MAAO,UACPC,MAAOzB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,OAEX,CACIsB,KAAM,2BACNC,MAAO,QACPC,MAAOzB,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,OAEX,CACIsB,KAAM,sEACNC,MAAO,SACPC,MAAOzB,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,uECTT4B,EAAaC,aAAiB,SAAoBC,EAAOC,GAC7D,OAAOC,EAAA,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAOC,UAAU,KAAKL,IAAKA,GAASD,MAG9B,SAASO,EAATC,GAAkE,IAAnCC,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,MAAOC,EAAsBH,EAAtBG,UAAWC,EAAWJ,EAAXI,SAAWC,EACvDd,YAAe,GADwCe,EAAAV,OAAAW,EAAA,EAAAX,CAAAS,EAAA,GACxEG,EADwEF,EAAA,GAClEG,EADkEH,EAAA,GAOzEI,EAAc,WAClBD,GAAQ,IAGV,OACEf,EAAA,yBACEA,EAAA,cAACiB,EAAA,EAAD,CACET,MAAOA,EACPU,OAAK,GAEPlB,EAAA,cAACmB,EAAA,EAAD,CACIzC,QAAQ,WACRJ,UAAU,uBACVK,QAjBgB,WACtBoC,GAAQ,KAkBDR,IAGLP,EAAA,cAACoB,EAAA,EAAD,CACEN,KAAMA,EACNO,oBAAqBzB,EACrB0B,aAAW,EACXC,QAASP,EACTQ,mBAAiB,iCACjBlD,UAAU,aAEV0B,EAAA,cAACyB,EAAA,EAAD,QAAAC,OAAiBjB,IACjBT,EAAA,cAAC2B,EAAA,EAAD,CAAerD,UAAU,kBACvB0B,EAAA,uBAAIU,IAKNV,EAAA,cAAC4B,EAAA,EAAD,KACE5B,EAAA,cAACvB,EAAA,EAAD,CAAQE,QAASqC,GAAjB,iDC1CV,IAsFea,EAtFD,WACV,IAAMhE,EAAUC,cADAgE,EAGgBC,qBAAWnD,GAA1BoD,GAHDF,EAGTG,SAHSH,EAGCE,aAHDE,EAIgBH,qBAAWnD,GAApCuD,EAJSD,EAITC,SAAUC,EAJDF,EAICE,YAJDC,EAKcN,qBAAWnD,GAAlC0D,EALSD,EAKTC,QAASC,EALAF,EAKAE,WALAC,EAMsDT,qBAAWnD,GAApE6D,GANGD,EAMTE,KANSF,EAMHC,SAAiBE,GANdH,EAMMI,OANNJ,EAMcG,WAAyBE,GANvCL,EAMyBM,aANzBN,EAMuCK,aANvCE,EAOoKhB,qBAAWnD,GAAvGoE,GAPxED,EAOTE,eAPSF,EAOOG,kBAPPH,EAO0BI,aAP1BJ,EAOwCK,gBAPxCL,EAOyDM,cAPzDN,EAOwEC,kBAAkBM,EAP1FP,EAO0FO,YAAiDC,GAP3IR,EAOuGS,eAPvGT,EAOuHU,mBAPvHV,EAO2IQ,uBAU3J,SAASG,EAAUC,GACf9F,EAAQF,GACR8E,EAAQ,IACRE,EAAU,IASd,WACI,IAAMiB,EAAI9E,EAAa,EAAG+E,EAASzE,OAAO0E,QAAU,EACpDjB,EAAYgB,EAASzE,OAAOwE,IAV5BG,GACAf,EAAiB,GACA,OAAbb,GAAmBH,EAAY2B,GAClB,WAAbxB,GAAuBH,GAAY,GACvB,OAAZM,GAAkBC,EAAW,QACjCgB,EAAsBD,GAQ1B,OAnBAU,QAAQC,IAAI9B,GAoBRpE,EAAAC,EAAAC,cAAA,QAAMK,UAAU,cACZP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACXP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SAAd,6GACAP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,aAAb,uNAEJP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qBACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACXP,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACIC,MAAM,UACN5E,MAAO4C,EACPiC,WAAS,EACTC,SAnCC,SAACC,EAAOC,GACzBnC,EAAYmC,IAmCIjG,UAAU,2BAETe,EAAMmF,IAAI,SAAAC,GAAI,OACX1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACInF,MAAOkF,EAAKlF,MACZoF,IAAK1F,KAAKG,UAETqF,EAAKjF,MACLiF,EAAKnF,UAKtBvB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,yBACXP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,QAAQ,YACRC,QAAS,kBAAM+E,GAAU,KAF7B,yCAMA3F,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,QAAQ,YACRC,QAAS,kBAAM+E,GAAU,IACzBpF,UAAU,eAHd,0DAOAP,EAAAC,EAAAC,cAACoC,EAAD,CACIE,KAAMxC,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,MACNwC,MAAM,oGACNC,UAAU,oGACVC,SAAS,0IC0BlBmE,EA3GQ,WAAM,IAAA/C,EAC8WC,qBAAWnD,GAApXuD,GADLL,EAClBG,SADkBH,EACRE,YADQF,EACKK,UAAuB2C,GAD5BhD,EACeM,YADfN,EAC4BgD,SAA2BrC,GADvDX,EACqCiD,WADrCjD,EACiDY,KADjDZ,EACuDW,SAAsBuC,GAD7ElD,EACgEmD,YADhEnD,EAC6EkD,gBAAmDrC,GADhIb,EAC6FgB,aAD7FhB,EAC2Ge,YAD3Gf,EACwHc,OADxHd,EACgIa,WAAWL,EAD3IR,EAC2IQ,QAAqBW,GADhKnB,EACoJS,WADpJT,EACgKmB,gBAAmCE,GADnMrB,EACgLoB,kBADhLpB,EACmMqB,cAA+B+B,GADlOpD,EACiNsB,gBADjNtB,EACkOoD,eAAiC7B,GADnQvB,EACiPqD,iBADjPrD,EACmQuB,eAAeL,EADlRlB,EACkRkB,iBAA+BQ,GADjT1B,EACoSwB,YADpSxB,EACiT0B,gBAAgBC,EADjU3B,EACiU2B,mBADjU3B,EACqVyB,sBAI9W,SAAS6B,EAAczB,GACnB,GAAa,aAATA,EAAqB,CACrB,GAAiB,YAAbxB,EAAwB,CACxB,IAAMyB,EAAI9E,EAAa,EAAGuG,EAAUC,QAAQxB,QAAU,EACtDrB,EAAQ4C,EAAUC,QAAQ1B,IAC1BjB,EAAU,YACV4C,IAEAvC,EADaK,EAAgB,GAEzBI,GAAoBD,GAAe,IACZ,IAAvBC,GAA8BD,GAAe,GAErD,GAAiB,UAAbrB,EAAsB,CACtB,IAAMyB,EAAI9E,EAAa,EAAGuG,EAAUG,MAAM1B,QAAU,EACpDrB,EAAQ4C,EAAUG,MAAM5B,IACxBjB,EAAU,YACV4C,IAEAvC,EADaK,EAAgB,GAEzBI,GAAoBD,GAAe,IACZ,IAAvBC,GAA8BD,GAAe,GAErD,GAAiB,WAAbrB,EAAuB,CACvB,IAAMyB,EAAI9E,EAAa,EAAGmE,EAAea,QAAU,EACnDrB,EAAQQ,EAAeW,IACvBjB,EAAU,YACV4C,IAEAvC,EADaK,EAAgB,GAEzBI,GAAoBD,GAAe,IACZ,IAAvBC,GAA8BD,GAAe,IAGzD,GAAa,WAATG,EAAmB,CACnB,GAAiB,YAAbxB,EAAwB,CACxB,IAAMyB,EAAI9E,EAAa,EAAG2G,EAAQH,QAAQxB,QAAU,EACpDrB,EAAQgD,EAAQH,QAAQ1B,IACxBjB,EAAU,UACV4C,IAEAvC,EADaK,EAAgB,GAEzBI,GAAoBD,GAAe,IACZ,IAAvBC,GAA8BD,GAAe,GAErD,GAAiB,UAAbrB,EAAsB,CACtB,IAAMyB,EAAI9E,EAAa,EAAG2G,EAAQD,MAAM1B,QAAU,EAClDrB,EAAQgD,EAAQD,MAAM5B,IACtBjB,EAAU,UACV4C,IAEAvC,EADaK,EAAgB,GAEzBI,GAAoBD,GAAe,IACZ,IAAvBC,GAA8BD,GAAe,GAErD,GAAiB,WAAbrB,EAAuB,CACvB,IAAMyB,EAAI9E,EAAa,EAAGqE,EAAaW,QAAU,EACjDrB,EAAQU,EAAaS,IACrBjB,EAAU,UACV4C,IAEAvC,EADaK,EAAgB,GAEzBI,GAAoBD,GAAe,IACZ,IAAvBC,GAA8BD,GAAe,KAK7D,SAAS+B,IACL,GAAgB,UAAZjD,EAAqB,CACrB,IAAMsB,EAAI9E,EAAa,EAAG4G,EAASC,MAAM7B,QAAU,EACnDkB,EAAeU,EAASC,MAAM/B,IAElC,GAAgB,SAAZtB,EAAoB,CACpB,IAAMsB,EAAI9E,EAAa,EAAG4G,EAASE,KAAK9B,QAAU,EAClDkB,EAAeU,EAASE,KAAKhC,IAEjC,GAAgB,WAAZtB,EAAsB,CACtB,IAAMsB,EAAI9E,EAAa,EAAGoG,EAAcpB,QAAU,EAClDkB,EAAeE,EAActB,KAIrC,OApFIP,IAAkByB,EAAQhB,QAASd,EAAiB,GAqFpDjF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,8BACXP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,QAAQ,YACRC,QAAS,kBAAMyG,EAAc,cAFjC,wCADJ,qBAQIrH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,QAAQ,YACRC,QAAS,kBAAMyG,EAAc,WAC7B9G,UAAU,eAHd,sDC1GCuH,EAAgB,CACzB,CACIvG,KAAM,qBACNC,MAAO,QAEX,CACID,KAAM,uCACNC,MAAO,SAEX,CACID,KAAM,6CACNC,MAAO,QAEX,CACID,KAAM,2BACNC,MAAO,6CCyaAuG,EA1aF,WACT,IAAMjI,EAAUC,cADDgE,EAEwXC,qBAAWnD,GAA3YqD,EAFQH,EAERG,SAAUD,EAFFF,EAEEE,YAAaG,EAFfL,EAEeK,SAAUC,EAFzBN,EAEyBM,YAAaM,EAFtCZ,EAEsCY,KAAMD,EAF5CX,EAE4CW,QAASwC,EAFrDnD,EAEqDmD,YAA6BnC,GAFlFhB,EAEkEkD,eAFlElD,EAEkFgB,cAAcD,EAFhGf,EAEgGe,YAAaD,EAF7Gd,EAE6Gc,OAAQD,EAFrHb,EAEqHa,UAAWmC,EAFhIhD,EAEgIgD,QAASC,EAFzIjD,EAEyIiD,WAAYzC,EAFrJR,EAEqJQ,QAASC,EAF9JT,EAE8JS,WAAYU,EAF1KnB,EAE0KmB,eAAgBC,EAF1LpB,EAE0LoB,kBAAmBC,EAF7MrB,EAE6MqB,aAAcC,EAF3NtB,EAE2NsB,gBAAiB8B,EAF5OpD,EAE4OoD,cAAeC,EAF3PrD,EAE2PqD,iBAAkB9B,EAF7QvB,EAE6QuB,cAAeL,EAF5RlB,EAE4RkB,iBAAkBM,EAF9SxB,EAE8SwB,YAAaE,EAF3T1B,EAE2T0B,eAAoCD,GAF/VzB,EAE2U2B,mBAF3U3B,EAE+VyB,uBAE1WwC,EAAkB5D,EACL,YAAbA,IAAwB4D,EAAkB,8CAC7B,UAAb5D,IAAsB4D,EAAkB,4BAC3B,WAAb5D,IAAuB4D,EAAkB,uEAP9B,IAAAC,EAS+BC,oBAAS,GATxCC,EAAAhG,OAAAW,EAAA,EAAAX,CAAA8F,EAAA,GASRG,EATQD,EAAA,GASSE,EATTF,EAAA,GAUTG,GAAoB,WACtB,OAAwB,IAApBF,GACA3C,GAAe,QACf4C,GAAmB,IAGnBD,GACA3C,GAAe,QACf4C,GAAmB,SAFvB,GAaJ,SAAS1C,GAAUC,GACf9F,EAAQF,GACR8E,EAAQ,IACRE,EAAU,IA+Dd,WACI,IAAMiB,EAAI9E,EAAa,EAAG+E,EAASzE,OAAO0E,QAAU,EACpDjB,EAAYgB,EAASzE,OAAOwE,IAhE5BG,GACAf,EAAiB,GACA,OAAbb,GAAmBH,EAAY2B,GAClB,WAAbxB,GAAmD,IAA1Bc,EAAea,QAAwC,IAAxBX,EAAaW,SACrEjG,EAAQF,GACRqE,GAAY,IAEA,OAAZM,GAAkBC,EAAW,QACjCgB,EAAsBD,GAzCX,IAAAgD,GA4CqBL,mBAAS,IA5C9BM,GAAArG,OAAAW,EAAA,EAAAX,CAAAoG,GAAA,GA4CRE,GA5CQD,GAAA,GA4CIE,GA5CJF,GAAA,OAAAG,GAuDqCT,mBAAS,IAvD9CU,GAAAzG,OAAAW,EAAA,EAAAX,CAAAwG,GAAA,GAuDRE,GAvDQD,GAAA,GAuDYE,GAvDZF,GAAA,OAAAG,GAiEiCb,mBAAS,IAjE1Cc,GAAA7G,OAAAW,EAAA,EAAAX,CAAA4G,GAAA,GAiERE,GAjEQD,GAAA,GAiEUE,GAjEVF,GAAA,OAAAG,GA2EmCjB,mBAAS,IA3E5CkB,GAAAjH,OAAAW,EAAA,EAAAX,CAAAgH,GAAA,GA2ERE,GA3EQD,GAAA,GA2EWE,GA3EXF,GAAA,GAsGf,MAfiB,WAAbhF,GAAoD,IAA1Bc,EAAea,QAAwC,IAAxBX,EAAaW,QACtEwD,OAAOC,iBAAiB,eAAgB,SAACjD,GACrCA,EAAMkD,iBACNlD,EAAMmD,YAAc,KAW5BzD,QAAQC,IAAR,gCAAAvC,OAA4CO,EAA5C,UAAAP,OAA6DS,EAA7D,oBAAAT,OAAwFY,EAAxF,KAAAZ,OAAmG4B,EAAnG,gBAAA5B,OAA6HoD,IAEzH/G,EAAAC,EAAAC,cAAA,YACKgE,EACOlE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,4BACXP,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAST,MAAM,oIAA2BkH,UAAU,MAAMxG,OAAK,GAC3DnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CACIxC,QAAS,WAAOd,ET3HrB,KS2H+CmE,GAAY,GAAYsB,GAAaC,GAAsB,IAA4B,IAAhBD,GAAuBC,GAAsB,KAE9JxF,EAAAC,EAAAC,cAAC0J,EAAA3J,EAAD,QAGRD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAST,MAAM,yDAAYkH,UAAU,MAAMxG,OAAK,GAC5CnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CACIxC,QAAS,WAAOqD,GAAY,KAE5BjE,EAAAC,EAAAC,cAAC2J,EAAA5J,EAAD,SAIZD,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACI1D,MAAM,QACN2D,MAAK,mCAAApG,OAAYqE,GACjBrH,QAAQ,aAEF,KAATgE,EACO3E,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SACE,aAAXsE,EACO7E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+J,SAAA,6CACAhK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+J,SAAA,0DAGZhK,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SAAd,+CAEI,KAAXsE,EACO7E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+J,SAAA,MACAhK,EAAAC,EAAAC,cAAA,MAAIK,UAAU,QACTwE,GAOb/E,EAAAC,EAAAC,cAAA,KAAGK,UAAU,iBAAiBoE,GACjB,SAAZJ,EACOvE,EAAAC,EAAAC,cAAA,WACc,KAATyE,EACO3E,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACM0J,IAAhB/C,EACOlH,EAAAC,EAAAC,cAAA,OAAKK,UAAU,2BAAf,0NAEKgF,EACOvF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACXP,EAAAC,EAAAC,cAAA,SAAIgH,GACJlH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,QAAQ,OACRC,QAAS0H,GACTjI,GAAI,CAAE6J,GAAI,IAHd,yCAQJlK,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACXP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,gBAAgB2G,GAC7BlH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,QAAQ,OACRC,QAAS0H,GACTjI,GAAI,CAAE6J,GAAI,IAHd,sDAUhBlK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+J,SAAA,OAGZhK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+J,SAAA,OAGZhK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+J,SAAA,MAEY,IAAnBjD,EAAQhB,OACD/F,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,4GAAAoD,OAA8CoD,EAAQzB,KACtDtF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+J,SAAA,MAERhK,EAAAC,EAAAC,cAACiK,EAAD,OAEJnK,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACXP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SAAd,0DACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACXP,EAAAC,EAAAC,cAAA,kFACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACXP,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACIC,MAAM,UACN5E,MAAO4C,EACPiC,WAAS,EACTC,SAlLX,SAACC,EAAOC,GACzBnC,EAAYmC,IAkLgBjG,UAAU,2BAETe,EAAMmF,IAAI,SAAAC,GAAI,OACX1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAcnF,MAAOkF,EAAKlF,MAAOoF,IAAK1F,KAAKG,UACtCqF,EAAKjF,MACLiF,EAAKnF,WAM1BvB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACXP,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACXP,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACIC,MAAM,UACN5E,MAAO+C,EACP8B,WAAS,EACTC,SAlMJ,SAACC,EAAOC,GAChChC,EAAWgC,IAkMiBjG,UAAU,2BAETuH,EAAcrB,IAAI,SAAAZ,GAAC,OAChB7F,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAcnF,MAAOqE,EAAErE,MAAOoF,IAAK1F,KAAKG,UACnCwE,EAAEtE,UAKnBvB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACXP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,uJACAP,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CACI5I,MAAO+D,EACPe,SAAUgC,GACV+B,QAAS9E,MAIrBvF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACD,WAAb6D,EACOpE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACXP,EAAAC,EAAAC,cAAA,mIACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACXP,EAAAC,EAAAC,cAAA,mDAC2B,IAA1BgF,EAAea,OACR/F,EAAAC,EAAAC,cAAA,WACKgF,EAAeuB,IAAI,SAAA6D,GAAQ,OACxBtK,EAAAC,EAAAC,cAAA,KACI0G,IAAK1F,KAAKG,SACVd,UAAU,aAET+J,MAIbtK,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,wJAERP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,wCACXP,EAAAC,EAAAC,cAAA,SACIqK,YAAY,yOACZ/I,MAAOqH,GACPvC,SAAU,SAAAkE,GAAC,OAAI1B,GAAsB0B,EAAEC,OAAOjJ,UAElDxB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQE,QA/MhD,WAC+B,KAAvBiI,KACA1D,EAAiB,GAAAxB,OAAAxB,OAAAuI,EAAA,EAAAvI,CAAK+C,GAAL,CAAqB,CAAC2D,OACvCC,GAAsB,OA4MU,qDAIJ9I,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIE,QA9MxC,WACIuE,EAAkB,KA8MkBiB,MAAM,SAFV,kEAOJpG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACXP,EAAAC,EAAAC,cAAA,+DACyB,IAAxBkF,EAAaW,OACN/F,EAAAC,EAAAC,cAAA,WACKkF,EAAaqB,IAAI,SAAAkE,GAAM,OACpB3K,EAAAC,EAAAC,cAAA,KACI0G,IAAK1F,KAAKG,SACVd,UAAU,aAEToK,MAIb3K,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,0KAERP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,wCACXP,EAAAC,EAAAC,cAAA,SACIqK,YAAY,2IACZ/I,MAAOyH,GACP3C,SAAU,SAAAkE,GAAC,OAAItB,GAAoBsB,EAAEC,OAAOjJ,UAEhDxB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQE,QArOhD,WAC6B,KAArBqI,KACA5D,EAAe,GAAA1B,OAAAxB,OAAAuI,EAAA,EAAAvI,CAAKiD,GAAL,CAAmB,CAAC6D,OACnCC,GAAoB,OAkOY,qDAIJlJ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIE,QApOxC,WACIyE,EAAgB,KAoOoBe,MAAM,SAFV,mEAQRpG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+J,SAAA,MAEK,WAAZzF,EACOvE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACXP,EAAAC,EAAAC,cAAA,+IACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACe,IAAzB4G,EAAcpB,OACP/F,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,gLACAP,EAAAC,EAAAC,cAAA,WACKiH,EAAcV,IAAI,SAAAlC,GAAO,OACtBvE,EAAAC,EAAAC,cAAA,KACI0G,IAAK1F,KAAKG,SACVd,UAAU,aAETgE,MAKrBvE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,wCACXP,EAAAC,EAAAC,cAAA,SACIqK,YAAY,wKACZ/I,MAAO6H,GACP/C,SAAU,SAAAkE,GAAC,OAAIlB,GAAqBkB,EAAEC,OAAOjJ,UAEjDxB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQE,QAhQhD,WAC8B,KAAtByI,KACAjC,EAAgB,GAAAzD,OAAAxB,OAAAuI,EAAA,EAAAvI,CAAKgF,GAAL,CAAoB,CAACkC,OACrCC,GAAqB,OA6PW,qDAIJtJ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIE,QA/PxC,WACIwG,EAAiB,KA+PmBhB,MAAM,SAFV,mEAQRpG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+J,SAAA,MAERhK,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACXP,EAAAC,EAAAC,cAAA,mDACE6G,EAAQhB,OAEF/F,EAAAC,EAAAC,cAAA,WACK6G,EAAQN,IAAI,SAAAmE,GAAM,OACf5K,EAAAC,EAAAC,cAAA,KACI0G,IAAK1F,KAAKG,SACVd,UAAU,aAETqK,MAPb5K,EAAAC,EAAAC,cAAA,KAAGK,UAAU,aAAb,sFAYRP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,4BACXP,EAAAC,EAAAC,cAAA,SACIqK,YAAY,4JACZ/I,MAAOiH,GACPnC,SAAU,SAAAkE,GAAC,OAAI9B,GAAc8B,EAAEC,OAAOjJ,UAE1CxB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQE,QAlUpC,WACuB,KAAf6H,KACAzB,EAAU,GAAArD,OAAAxB,OAAAuI,EAAA,EAAAvI,CAAK4E,GAAL,CAAc,CAAC0B,OACzBC,GAAc,OA+TM,qDAIJ1I,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIE,QAjU5B,WACIoG,EAAW,KAiUaZ,MAAM,SAFV,yEAQJpG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qBACG,WAAb6D,GAAoD,IAA1Bc,EAAea,QAAwC,IAAxBX,EAAaW,OAsB/D/F,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACXP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,QAAQ,YACRC,QAAS,kBAAM+E,IAAU,KAF7B,yCAMA3F,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAST,MAAM,oIAA2BU,OAAK,GAC3CnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CACI7C,UAAU,OACVK,QAAS,WAAOd,ET1ajC,KS0a2DmE,GAAY,GAAYsB,GAAaC,GAAsB,IAA4B,IAAhBD,GAAuBC,GAAsB,KAE9JxF,EAAAC,EAAAC,cAAC0J,EAAA3J,EAAD,SAjCZD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACXP,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACIT,MAAM,kcACNU,OAAK,GAELnD,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,QAAQ,YACRJ,UAAU,YAFd,0CAOJP,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAST,MAAM,oIAA2BU,OAAK,GAC3CnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CACI7C,UAAU,OACVK,QAAS,WAAOd,ET1ZjC,KS0Z2DmE,GAAY,GAAYsB,GAAaC,GAAsB,IAA4B,IAAhBD,GAAuBC,GAAsB,KAE9JxF,EAAAC,EAAAC,cAAC0J,EAAA3J,EAAD,aCjWjC4K,EAhDG,WACd,IAAM/K,EAAUC,cADIgE,EAGsCC,qBAAWnD,GAA9DoD,EAHaF,EAGbE,YAAasB,EAHAxB,EAGAwB,YAAaC,EAHbzB,EAGayB,sBAEjC,OACIxF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACXP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SAAd,qDACAP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,cAAb,+ZAEIP,EAAAC,EAAAC,cAAA,WAFJ,wRAKAF,EAAAC,EAAAC,cAAA,MAAIK,UAAU,QAAd,gEACAP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,uIACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cAEXP,EAAAC,EAAAC,cAAA,SAAIoH,EAAUC,QAAQxB,OAASuB,EAAUG,MAAM1B,OAA/C,wFACA/F,EAAAC,EAAAC,cAAA,SAAIwH,EAAQH,QAAQxB,OAAS2B,EAAQD,MAAM1B,OAA3C,qDACA/F,EAAAC,EAAAC,cAAA,SAAIyH,EAASC,MAAM7B,OAAS4B,EAASE,KAAK9B,OAA1C,8FAAuE4B,EAASC,MAAM7B,OAAtF,gDAAwG4B,EAASE,KAAK9B,OAAtH,gDACA/F,EAAAC,EAAAC,cAAA,SAAIoB,EAAMyE,OAAV,kEACA/F,EAAAC,EAAAC,cAAA,SAAI4F,EAASzE,OAAO0E,OAApB,+JACA/F,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,0EAEJP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,QAAd,wHACAP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,cAAb,wlBACAP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,aAAd,kCACAP,EAAAC,EAAAC,cAAA,KACI4K,KAAK,8BACLL,OAAO,SACPM,IAAI,uBAHR,mBAOA/K,EAAAC,EAAAC,cAAA,OAAKK,UAAU,8BACXP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIH,UAAU,QACVK,QAAS,WAAOd,EVjDT,KUiDmCmE,GAAY,GAAYsB,GAAaC,GAAsB,IAA4B,IAAhBD,GAAuBC,GAAsB,KAFlK,4CCxCPwF,EAAe,CACxB,CACIC,KXTuB,IWUvBC,UAAWlL,EAAAC,EAAAC,cAACiL,EAAD,OAEf,CACIF,KXZmB,SWanBC,UAAWlL,EAAAC,EAAAC,cAACkL,EAAD,OAEf,CACIH,KAAMrL,EACNsL,UAAWlL,EAAAC,EAAAC,cAACmL,EAAD,OAEf,CACIJ,KXlBmB,SWmBnBC,UAAWlL,EAAAC,EAAAC,cAACoL,EAAD,QCFJC,GAhBG,WACd,OACIvL,EAAAC,EAAAC,cAACsL,EAAA,EAAD,KACKR,EAAavE,IAAI,SAAAgF,GAAK,OACnBzL,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CACIP,KAAMQ,EAAMR,KACZS,QAASD,EAAMP,UACftE,IAAK6E,EAAMR,KACXU,MAAOF,EAAME,UAGrB3L,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAOP,KAAK,IAAIS,QAAS1L,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAUI,SAAO,EAACC,GAAG,QATlD,oCCsDOC,GApDM,WACjB,IAAMhM,EAAUC,cAChB,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CACI1L,GAAI,CAAEC,GAAI,IAEVN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qCAiBXP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,QAAQ,OACRJ,UAAU,eACVK,QAAS,kBAAMd,EbhCZ,WaiCHkM,UAAWhM,EAAAC,EAAAC,cAAC+L,GAAAhM,EAAD,OAJf,qDAQAD,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,QAAQ,OACRJ,UAAU,eACVK,QAAS,kBAAM2I,OAAOxG,KAAK,qDAAsD,YAHrF,WAQJ/C,EAAAC,EAAAC,cAAA,OAAKK,UAAU,+BACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACXP,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,KAAG4K,KAAK,8BAA8BL,OAAO,SAASM,IAAI,uBAA1D,aAEJ/K,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,mBCYL2L,GAzDH,WAAM,IAAAjE,EACgBC,oBAAS,GADzBC,EAAAhG,OAAAW,EAAA,EAAAX,CAAA8F,EAAA,GACT/D,EADSiE,EAAA,GACClE,EADDkE,EAAA,GAAAI,EAEgBL,mBAAS,WAFzBM,EAAArG,OAAAW,EAAA,EAAAX,CAAAoG,EAAA,GAETnE,EAFSoE,EAAA,GAECnE,EAFDmE,EAAA,GAAAG,EAGQT,mBAAS,IAHjBU,EAAAzG,OAAAW,EAAA,EAAAX,CAAAwG,EAAA,GAGThE,EAHSiE,EAAA,GAGHlE,EAHGkE,EAAA,GAAAG,EAIsBb,mBAAS,IAJ/Bc,EAAA7G,OAAAW,EAAA,EAAAX,CAAA4G,EAAA,GAIT7B,EAJS8B,EAAA,GAII/B,EAJJ+B,EAAA,GAAAG,EAKoBjB,mBAAS,uJAL7BkB,EAAAjH,OAAAW,EAAA,EAAAX,CAAAgH,EAAA,GAKTpE,EALSqE,EAAA,GAKKtE,EALLsE,EAAA,GAAA+C,EAMYjE,mBAAS,IANrBkE,EAAAjK,OAAAW,EAAA,EAAAX,CAAAgK,EAAA,GAMTtH,EANSuH,EAAA,GAMDxH,EANCwH,EAAA,GAAAC,EAOcnE,mBAAS,IAPvBoE,EAAAnK,OAAAW,EAAA,EAAAX,CAAAkK,EAAA,GAOTtF,EAPSuF,EAAA,GAOAtF,EAPAsF,EAAA,GAAAC,EAQcrE,mBAAS,QARvBsE,EAAArK,OAAAW,EAAA,EAAAX,CAAAoK,EAAA,GAQThI,EARSiI,EAAA,GAQAhI,EARAgI,EAAA,GAAAC,EAS4BvE,mBAAS,IATrCwE,EAAAvK,OAAAW,EAAA,EAAAX,CAAAsK,EAAA,GASTvH,EATSwH,EAAA,GASOvH,EATPuH,EAAA,GAAAC,EAUwBzE,mBAAS,IAVjC0E,EAAAzK,OAAAW,EAAA,EAAAX,CAAAwK,EAAA,GAUTvH,EAVSwH,EAAA,GAUKvH,EAVLuH,EAAA,GAAAC,EAW0B3E,mBAAS,IAXnC4E,EAAA3K,OAAAW,EAAA,EAAAX,CAAA0K,EAAA,GAWT1F,EAXS2F,EAAA,GAWM1F,EAXN0F,EAAA,GAAAC,EAY0B7E,oBAAU,GAZpC8E,EAAA7K,OAAAW,EAAA,EAAAX,CAAA4K,EAAA,GAYTzH,EAZS0H,EAAA,GAYM/H,EAZN+H,EAAA,GAAAC,GAasB/E,oBAAS,GAb/BgF,GAAA/K,OAAAW,EAAA,EAAAX,CAAA8K,GAAA,GAaT1H,GAbS2H,GAAA,GAaIzH,GAbJyH,GAAA,GAAAC,GAcoCjF,oBAAS,GAd7CkF,GAAAjL,OAAAW,EAAA,EAAAX,CAAAgL,GAAA,GAcTzH,GAdS0H,GAAA,GAcW5H,GAdX4H,GAAA,GAgBhB,OACEpN,EAAAC,EAAAC,cAACW,EAAWwM,SAAZ,CAAqB7L,MAAO,CAC1B0C,WACAD,cACAG,WACAC,cACAM,OACAD,UACAwC,cACAD,iBACAlC,eACAD,cACAD,SACAD,YACAmC,UACAC,aACAzC,UACAC,aACAU,iBACAC,oBACAC,eACAC,kBACA8B,gBACAC,mBACA9B,gBACAL,mBACAM,eACAE,kBACAC,sBACAF,2BAEAxF,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,SAAS,MAClBJ,EAAAC,EAAAC,cAACqN,GAAD,MACAvN,EAAAC,EAAAC,cAACsN,GAAD,UCjDGC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7N,EAAAC,EAAAC,cAAC4N,GAAD","file":"static/js/main.d2f3a5e2.chunk.js","sourcesContent":["export const STARTPAGE_ROUTE = '/';\r\nexport const ERROR_ROUTE = '/error';\r\nexport const GAME_ROUTE = '/game';\r\nexport const ABOUT_ROUTE = '/about';","import React from \"react\";\r\nimport Container from '@mui/material/Container'\r\nimport { Alert, Button } from \"@mui/material\";\r\nimport { STARTPAGE_ROUTE } from \"../../routes/consts\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ErrorPage = () => {\r\n    const history = useNavigate();\r\n    \r\n    return (\r\n        <main>\r\n            <Container \r\n                maxWidth=\"xl\" \r\n                sx={{my: 5}}\r\n                className=\"error_f\"\r\n            >\r\n                <Alert severity=\"error\">Ошибка 404. Страница не найдена</Alert>\r\n                <Button \r\n                    variant=\"outlined\" \r\n                    onClick={() => history(STARTPAGE_ROUTE)}\r\n                    sx={{my: 1}}\r\n                >\r\n                    Вернуться на главную\r\n                </Button>\r\n            </Container>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import { createContext } from \"react\";\r\n\r\nexport const appContext = createContext(null);","export default function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}","import React from 'react';\r\nimport WhatshotIcon from '@mui/icons-material/Whatshot';\r\nimport DashboardCustomizeIcon from '@mui/icons-material/DashboardCustomize';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\n\r\nexport const modes = [\r\n    {\r\n        name: \"Классик\",\r\n        value: \"classic\",\r\n        emoji: <PeopleIcon />\r\n    },\r\n    {\r\n        name: \"Пати\",\r\n        value: \"party\",\r\n        emoji: <WhatshotIcon />\r\n    },\r\n    {\r\n        name: \"Свои вопросы\",\r\n        value: \"custom\",\r\n        emoji: <DashboardCustomizeIcon />\r\n    },\r\n]","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { IconButton, Tooltip } from '@mui/material';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlideIcon({icon, title, textTITLE, textDESC}) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip \r\n        title={title}\r\n        arrow\r\n      >\r\n      <IconButton\r\n          variant=\"outlined\"\r\n          className=\"nobg-button noborder\"\r\n          onClick={handleClickOpen}\r\n        >\r\n          {icon}\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n        className=\"alert-box\"\r\n      >\r\n        <DialogTitle>{`${textTITLE}`}</DialogTitle>\r\n        <DialogContent className=\"flex-row gap-0\">\r\n          <p>{textDESC}</p>\r\n          {/* <DialogContentText id=\"alert-dialog-slide-description\">\r\n             скоро онлайн(наверное)\r\n          </DialogContentText> */}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Закрыть</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import { Button, IconButton, ToggleButton, ToggleButtonGroup, Tooltip } from \"@mui/material\";\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GAME_ROUTE } from \"../../routes/consts\";\r\nimport { appContext } from \"../../context\";\r\nimport getRandomInt from \"../../functions/getRandomInt\";\r\nimport whostart from \"../../static/whostart.json\";\r\nimport { modes } from \"../../static/modes.js\";\r\nimport AlertDialogSlideIcon from \"../UI/AlertDialogSlideIcon\";\r\n\r\n\r\n\r\nconst Start = () => {\r\n    const history = useNavigate();\r\n\r\n    const {fastType, setFastType} = useContext(appContext);\r\n    const {gameType, setGameType} = useContext(appContext);\r\n    const {penalty, setPenalty} = useContext(appContext);\r\n    const {text, setText, choose, setChoose, textWhoStart, setWhoStart} = useContext(appContext)\r\n    const {customQuestion, setCustomQuestion, customAction, setCustomAction, playerStepNow, setPlayerStepNow, showPenalty, setShowPenalty, showPenaltyDefault, setShowPenaltyDefault} = useContext(appContext)\r\n\r\n    \r\n    \r\n    const handleChange = (event, newGameType) => {\r\n        setGameType(newGameType);\r\n    };\r\n\r\n    console.log(gameType)\r\n\r\n    function startGame(type) {\r\n        history(GAME_ROUTE)\r\n        setText('')\r\n        setChoose('')\r\n        chooseStartMessage()\r\n        setPlayerStepNow(0)\r\n        if (gameType !== null) setFastType(type)\r\n        if (gameType === 'custom') setFastType(false)\r\n        if (penalty === null) setPenalty('none')\r\n        setShowPenaltyDefault(showPenalty)\r\n    }\r\n\r\n    function chooseStartMessage() {\r\n        const i = getRandomInt(1, whostart.random.length) - 1\r\n        setWhoStart(whostart.random[i])\r\n    }\r\n\r\n    return (\r\n        <main className=\"start-page\">\r\n            <div className=\"hello\">\r\n                <h1 className=\"title\">Правда или действие?</h1>\r\n                <p className=\"note mb-3\">Играй в случайном порядке или по очереди</p>\r\n            </div>\r\n            <div className=\"flex-column gap-0\">\r\n                <div className=\"flex-row\">\r\n                    <ToggleButtonGroup\r\n                        color=\"primary\"\r\n                        value={gameType}\r\n                        exclusive\r\n                        onChange={handleChange}\r\n                        className=\"choosegame-buttons wrap\"\r\n                    >\r\n                        {modes.map(mode => (\r\n                            <ToggleButton \r\n                                value={mode.value} \r\n                                key={Math.random()}\r\n                            >\r\n                                {mode.emoji}\r\n                                {mode.name}\r\n                            </ToggleButton>\r\n                        ))}\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n                <div className=\"flex-row play-buttons\">\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        onClick={() => startGame(true)}\r\n                    >\r\n                        Играть!\r\n                    </Button>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        onClick={() => startGame(false)}\r\n                        className=\"nobg-button\"\r\n                    >\r\n                        Настроить\r\n                    </Button>\r\n                    <AlertDialogSlideIcon\r\n                        icon={<ShareIcon />} \r\n                        title=\"Поделиться сайтом\"\r\n                        textTITLE=\"Поделиться сайтом\"\r\n                        textDESC=\"Ссылка: https://roso1nik.github.io/truth-or-dare/\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Start;","import { Button } from \"@mui/material\";\r\nimport React, { useContext } from \"react\";\r\nimport { appContext } from \"../../context\";\r\nimport actions from \"../../static/actions.json\"\r\nimport questions from \"../../static/questions.json\"\r\nimport penaltys from \"../../static/penaltys.json\"\r\nimport getRandomInt from \"../../functions/getRandomInt\";\r\n\r\n\r\n\r\nconst ChooserVariant = () => {\r\n    const {fastType, setFastType, gameType, setGameType, players, setPlayers, text, setText, textPenalty, setTextPenalty, textWhoStart, setWhoStart, choose, setChoose, penalty, setPenalty, customQuestion, setCustomQuestion, customAction, setCustomAction, customPenalty, setCustomPenalty, playerStepNow, setPlayerStepNow, showPenalty, setShowPenalty, showPenaltyDefault, setShowPenaltyDefault} = useContext(appContext);\r\n\r\n    if (playerStepNow === players.length) {setPlayerStepNow(0)}\r\n\r\n    function chooseVariant(type) {\r\n        if (type === 'question') {\r\n            if (gameType === 'classic') {\r\n                const i = getRandomInt(1, questions.classic.length) - 1\r\n                setText(questions.classic[i])\r\n                setChoose('question')\r\n                choosePenalty()\r\n                const next = playerStepNow + 1\r\n                setPlayerStepNow(next)\r\n                if (showPenaltyDefault) setShowPenalty(true)\r\n                if (showPenaltyDefault === false) setShowPenalty(false)\r\n            }\r\n            if (gameType === 'party') {\r\n                const i = getRandomInt(1, questions.party.length) - 1\r\n                setText(questions.party[i])\r\n                setChoose('question')\r\n                choosePenalty()\r\n                const next = playerStepNow + 1\r\n                setPlayerStepNow(next)\r\n                if (showPenaltyDefault) setShowPenalty(true)\r\n                if (showPenaltyDefault === false) setShowPenalty(false)\r\n            }\r\n            if (gameType === 'custom') {\r\n                const i = getRandomInt(1, customQuestion.length) - 1\r\n                setText(customQuestion[i])\r\n                setChoose('question')\r\n                choosePenalty()\r\n                const next = playerStepNow + 1\r\n                setPlayerStepNow(next)\r\n                if (showPenaltyDefault) setShowPenalty(true)\r\n                if (showPenaltyDefault === false) setShowPenalty(false)\r\n            }\r\n        }\r\n        if (type === 'action') {\r\n            if (gameType === 'classic') {\r\n                const i = getRandomInt(1, actions.classic.length) - 1\r\n                setText(actions.classic[i])\r\n                setChoose('action')\r\n                choosePenalty()\r\n                const next = playerStepNow + 1\r\n                setPlayerStepNow(next)\r\n                if (showPenaltyDefault) setShowPenalty(true)\r\n                if (showPenaltyDefault === false) setShowPenalty(false)\r\n            }\r\n            if (gameType === 'party') {\r\n                const i = getRandomInt(1, actions.party.length) - 1\r\n                setText(actions.party[i])\r\n                setChoose('action')\r\n                choosePenalty()\r\n                const next = playerStepNow + 1\r\n                setPlayerStepNow(next)\r\n                if (showPenaltyDefault) setShowPenalty(true)\r\n                if (showPenaltyDefault === false) setShowPenalty(false)\r\n            }\r\n            if (gameType === 'custom') {\r\n                const i = getRandomInt(1, customAction.length) - 1\r\n                setText(customAction[i])\r\n                setChoose('action')\r\n                choosePenalty()\r\n                const next = playerStepNow + 1\r\n                setPlayerStepNow(next)\r\n                if (showPenaltyDefault) setShowPenalty(true)\r\n                if (showPenaltyDefault === false) setShowPenalty(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    function choosePenalty() {\r\n        if (penalty === 'light') {\r\n            const i = getRandomInt(1, penaltys.light.length) - 1\r\n            setTextPenalty(penaltys.light[i])\r\n        }\r\n        if (penalty === 'hard') {\r\n            const i = getRandomInt(1, penaltys.hard.length) - 1\r\n            setTextPenalty(penaltys.hard[i])\r\n        }\r\n        if (penalty === 'custom') {\r\n            const i = getRandomInt(1, customPenalty.length) - 1\r\n            setTextPenalty(customPenalty[i])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex-row play-buttons mt-3\">\r\n            <Button \r\n                variant=\"contained\"\r\n                onClick={() => chooseVariant('question')}\r\n            >\r\n                Правда\r\n            </Button>\r\n            или\r\n            <Button \r\n                variant=\"contained\"\r\n                onClick={() => chooseVariant('action')}\r\n                className=\"nobg-button\"\r\n            >\r\n                Действие\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChooserVariant;","export const penalty_modes = [\r\n    {\r\n        name: \"Нет\",\r\n        value: \"none\"\r\n    },\r\n    {\r\n        name: \"Легкие\",\r\n        value: \"light\"\r\n    },\r\n    {\r\n        name: \"Сложные\",\r\n        value: \"hard\"\r\n    },\r\n    {\r\n        name: \"Свои\",\r\n        value: \"custom\"\r\n    },\r\n]","import { Button, Chip, IconButton, Switch, ToggleButton, ToggleButtonGroup, Tooltip } from \"@mui/material\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { appContext } from \"../../context\";\r\nimport { GAME_ROUTE, STARTPAGE_ROUTE } from \"../../routes/consts\";\r\nimport ChooserVariant from \"../UI/ChooserVariant\";\r\nimport whostart from \"../../static/whostart.json\";\r\nimport getRandomInt from \"../../functions/getRandomInt\";\r\nimport { modes } from \"../../static/modes.js\";\r\nimport { penalty_modes } from \"../../static/penalty_modes\";\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\n\r\nconst Game = () => {\r\n    const history = useNavigate();\r\n    const {fastType, setFastType, gameType, setGameType, text, setText, textPenalty, setTextPenalty, textWhoStart, setWhoStart, choose, setChoose, players, setPlayers, penalty, setPenalty, customQuestion, setCustomQuestion, customAction, setCustomAction, customPenalty, setCustomPenalty, playerStepNow, setPlayerStepNow, showPenalty, setShowPenalty, showPenaltyDefault, setShowPenaltyDefault} = useContext(appContext);\r\n\r\n    let russianGameType = gameType\r\n    if (gameType === 'classic') russianGameType = 'классик'\r\n    if (gameType === 'party') russianGameType = 'пати'\r\n    if (gameType === 'custom') russianGameType = 'свои вопросы'\r\n\r\n    const [showPenaltyBool, setShowPenaltyBool] = useState(false);\r\n    const handleShowPenalty = () => {\r\n        if (showPenaltyBool === false) {\r\n            setShowPenalty(true)\r\n            setShowPenaltyBool(true)\r\n            return\r\n        }\r\n        if (showPenaltyBool) {\r\n            setShowPenalty(false)\r\n            setShowPenaltyBool(false)\r\n            return\r\n        }\r\n    }\r\n    const handleChange = (event, newGameType) => {\r\n        setGameType(newGameType);\r\n    };\r\n    const handleChangePenalty = (event, newGameType) => {\r\n        setPenalty(newGameType);\r\n    };\r\n\r\n    function startGame(type) {\r\n        history(GAME_ROUTE)\r\n        setText('')\r\n        setChoose('')\r\n        chooseStartMessage()\r\n        setPlayerStepNow(0)\r\n        if (gameType !== null) setFastType(type)\r\n        if (gameType === 'custom' && customQuestion.length === 0 && customAction.length === 0) {\r\n            history(GAME_ROUTE)\r\n            setFastType(false)\r\n        }\r\n        if (penalty === null) setPenalty('none')\r\n        setShowPenaltyDefault(showPenalty)\r\n    }\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    function addPlayer() {\r\n        if (inputValue !== '') {\r\n            setPlayers([...players, [inputValue]])\r\n            setInputValue('')\r\n        }\r\n    }\r\n    function removeAll() {\r\n        setPlayers([])\r\n    }\r\n\r\n    const [inputValueQuestion, setInputValueQuestion] = useState('');\r\n    function addQuestion() {\r\n        if (inputValueQuestion !== '') {\r\n            setCustomQuestion([...customQuestion, [inputValueQuestion]])\r\n            setInputValueQuestion('')\r\n        }\r\n    }\r\n    function removeQuestion() {\r\n        setCustomQuestion([])\r\n    }\r\n    const [inputValueAction, setInputValueAction] = useState('');\r\n    function addAction() {\r\n        if (inputValueAction !== '') {\r\n            setCustomAction([...customAction, [inputValueAction]])\r\n            setInputValueAction('')\r\n        }\r\n    }\r\n    function removeAction() {\r\n        setCustomAction([])\r\n    }\r\n    const [inputValuePenalty, setInputValuePenalty] = useState('');\r\n    function addPenalty() {\r\n        if (inputValuePenalty !== '') {\r\n            setCustomPenalty([...customPenalty, [inputValuePenalty]])\r\n            setInputValuePenalty('')\r\n        }\r\n    }\r\n    function removePenalty() {\r\n        setCustomPenalty([])\r\n    }\r\n    \r\n    // защита от случайной перезагрузке страницы при добавлении своих вариантов\r\n    if (gameType === 'custom' && (customQuestion.length !== 0 || customAction.length !== 0)) {\r\n        window.addEventListener('beforeunload', (event) => {\r\n            event.preventDefault();\r\n            event.returnValue = '';\r\n        });\r\n    }\r\n    \r\n\r\n    function chooseStartMessage() {\r\n        const i = getRandomInt(1, whostart.random.length) - 1\r\n        setWhoStart(whostart.random[i])\r\n    }\r\n\r\n\r\n    console.log(`game started with fast start(${fastType}) and ${gameType} mode, penalty: ${penalty}(${showPenalty}), players: ${players}`)\r\n    return (\r\n        <main>\r\n            {fastType\r\n                ?   <div>\r\n                        <div className=\"flex-row note mb-1 gap-0\">\r\n                            <Tooltip title=\"Вернуться в главное меню\" placement=\"top\" arrow>\r\n                                <IconButton\r\n                                    onClick={() => {history(STARTPAGE_ROUTE); setFastType(false); if (showPenalty) setShowPenaltyDefault(false); if (showPenalty === false) setShowPenaltyDefault(true)}}\r\n                                >\r\n                                    <HomeIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Настройки\" placement=\"top\" arrow>\r\n                                <IconButton\r\n                                    onClick={() => {setFastType(false)}}\r\n                                >\r\n                                    <SettingsIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                        <Chip \r\n                            color=\"error\" \r\n                            label={`режим: ${russianGameType}`} \r\n                            variant=\"outlined\"\r\n                        />\r\n                        {text !== ''\r\n                            ?   <h1 className=\"title\">\r\n                                    {choose === 'question'\r\n                                        ?   <>Вопрос</>\r\n                                        :   <>Действие</>\r\n                                    }\r\n                                </h1>\r\n                            :   <h1 className=\"title\">Погнали!</h1>\r\n                        }\r\n                        {choose !== ''\r\n                            ?   <></>\r\n                            :   <h1 className=\"note\">\r\n                                    {textWhoStart}\r\n                                    {/* {players.length === 0\r\n                                        ?   <p>{textWhoStart}</p>\r\n                                        :   <></>\r\n                                    } */}\r\n                                </h1>\r\n                        }\r\n                        <p className=\"mt-3 question\">{text}</p>\r\n                        {penalty !== 'none'\r\n                            ?   <div>\r\n                                    {text !== ''\r\n                                        ?   <div className=\"flex-row\">\r\n                                                {textPenalty !== undefined\r\n                                                    ?   <div className=\"note mt-3 flex-row wrap\">\r\n                                                            Наказание, если игрок не выполнил задачу:&nbsp;\r\n                                                            {showPenalty\r\n                                                                ?   <div className=\"flex-row\">\r\n                                                                        <p>{textPenalty}</p>\r\n                                                                        <Button \r\n                                                                            variant=\"text\"\r\n                                                                            onClick={handleShowPenalty}\r\n                                                                            sx={{ ml: 3 }}\r\n                                                                        >\r\n                                                                            скрыть\r\n                                                                        </Button>\r\n                                                                    </div>\r\n                                                                :   <div className=\"flex-row\">\r\n                                                                        <p className=\"penalty-blur\">{textPenalty}</p>\r\n                                                                        <Button \r\n                                                                            variant=\"text\"\r\n                                                                            onClick={handleShowPenalty}\r\n                                                                            sx={{ ml: 3 }}\r\n                                                                        >\r\n                                                                            показать\r\n                                                                        </Button>\r\n                                                                    </div>\r\n                                                            }\r\n                                                        </div>\r\n                                                    :   <></>\r\n                                                }\r\n                                            </div>\r\n                                        :   <></>\r\n                                    }\r\n                                </div>\r\n                            :   <></>\r\n                        }\r\n                        {players.length !== 0\r\n                            ?   <p className=\"mt-1\">Следующий(-ая) ходит: {`${players[playerStepNow]}`}</p>\r\n                            :   <></>\r\n                        }\r\n                        <ChooserVariant />\r\n                    </div>\r\n                :   <div className=\"settings\">\r\n                        <h1 className=\"title\">Настройки</h1>\r\n                        <div className=\"mt-3\">\r\n                            <h2>Тип вопросов:</h2>\r\n                            <div className=\"flex-row mt-1\">\r\n                                <ToggleButtonGroup\r\n                                    color=\"primary\"\r\n                                    value={gameType}\r\n                                    exclusive\r\n                                    onChange={handleChange}\r\n                                    className=\"choosegame-buttons wrap\"\r\n                                >\r\n                                    {modes.map(mode => (\r\n                                        <ToggleButton value={mode.value} key={Math.random()}>\r\n                                            {mode.emoji}\r\n                                            {mode.name}\r\n                                        </ToggleButton>\r\n                                    ))}\r\n                                </ToggleButtonGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                            <h2>Наказания:</h2>\r\n                            <div className=\"flex-row mt-1\">\r\n                                <ToggleButtonGroup\r\n                                    color=\"primary\"\r\n                                    value={penalty}\r\n                                    exclusive\r\n                                    onChange={handleChangePenalty}\r\n                                    className=\"choosegame-buttons wrap\"\r\n                                >\r\n                                    {penalty_modes.map(i => (\r\n                                        <ToggleButton value={i.value} key={Math.random()}>\r\n                                            {i.name}\r\n                                        </ToggleButton>\r\n                                    ))}\r\n                                </ToggleButtonGroup>\r\n                            </div>\r\n                            <div className=\"mt-1 flex-row\">\r\n                                <p className=\"note\">Показывать наказание сразу:</p>\r\n                                <Switch \r\n                                    value={showPenalty}\r\n                                    onChange={handleShowPenalty}\r\n                                    checked={showPenalty}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"paper\">\r\n                        {gameType === 'custom'\r\n                            ?   <div className=\"mt-3\">\r\n                                    <h2>Добавить свои вопросы:</h2>\r\n                                    <div className=\"mt-2\">\r\n                                        <h3>Правда:</h3>\r\n                                        {customQuestion.length !== 0\r\n                                            ?   <div>\r\n                                                    {customQuestion.map(question => (\r\n                                                        <p\r\n                                                            key={Math.random()}\r\n                                                            className=\"player-li\"\r\n                                                        >\r\n                                                            {question}\r\n                                                        </p>\r\n                                                    ))}\r\n                                                </div>\r\n                                            :   <p className=\"note\">Не добавлено ни одной правды</p>\r\n                                        }\r\n                                        <div className=\"flex-row players-box mt-1 wrap gap-1\">\r\n                                            <input\r\n                                                placeholder=\"например, сколько ошибок ты совершил в жизни?\"\r\n                                                value={inputValueQuestion}\r\n                                                onChange={e => setInputValueQuestion(e.target.value)}\r\n                                            />\r\n                                            <Button onClick={addQuestion}>\r\n                                                Добавить\r\n                                            </Button>\r\n                                        </div>\r\n                                        <Button \r\n                                            onClick={removeQuestion}\r\n                                            color=\"error\"\r\n                                        >\r\n                                            Удалить все\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className=\"mt-2\">\r\n                                        <h3>Действие:</h3>\r\n                                        {customAction.length !== 0\r\n                                            ?   <div>\r\n                                                    {customAction.map(action => (\r\n                                                        <p\r\n                                                            key={Math.random()}\r\n                                                            className=\"player-li\"\r\n                                                        >\r\n                                                            {action}\r\n                                                        </p>\r\n                                                    ))}\r\n                                                </div>\r\n                                            :   <p className=\"note\">Не добавлено ни одного действия</p>\r\n                                        }\r\n                                        <div className=\"flex-row players-box mt-1 wrap gap-1\">\r\n                                            <input\r\n                                                placeholder=\"например, встань на голову\"\r\n                                                value={inputValueAction}\r\n                                                onChange={e => setInputValueAction(e.target.value)}\r\n                                            />\r\n                                            <Button onClick={addAction}>\r\n                                                Добавить\r\n                                            </Button>\r\n                                        </div>\r\n                                        <Button \r\n                                            onClick={removeAction}\r\n                                            color=\"error\"\r\n                                        >\r\n                                            Удалить все\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            :   <></>\r\n                        }\r\n                        {penalty === \"custom\"\r\n                            ?   <div className=\"mt-3\">\r\n                                    <h2>Добавить свои наказания:</h2>\r\n                                    <div className=\"mt-1\">\r\n                                        {customPenalty.length === 0\r\n                                            ?   <p className=\"note\">Не добавлено ни одного наказания</p>\r\n                                            :   <div>\r\n                                                    {customPenalty.map(penalty => (\r\n                                                        <p\r\n                                                            key={Math.random()}\r\n                                                            className=\"player-li\"\r\n                                                        >\r\n                                                            {penalty}\r\n                                                        </p>\r\n                                                    ))}\r\n                                                </div>\r\n                                        }\r\n                                        <div className=\"flex-row mt-3 gap-1 players-box wrap\">\r\n                                            <input\r\n                                                placeholder=\"добавьте новое наказание здесь\"\r\n                                                value={inputValuePenalty}\r\n                                                onChange={e => setInputValuePenalty(e.target.value)}\r\n                                            />\r\n                                            <Button onClick={addPenalty}>\r\n                                                Добавить\r\n                                            </Button>\r\n                                        </div>\r\n                                        <Button \r\n                                            onClick={removePenalty}\r\n                                            color=\"error\"\r\n                                        >\r\n                                            Удалить все\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            :   <></>\r\n                        }\r\n                        <div className=\"mt-3 players-box\">\r\n                            <h2>Игроки:</h2>\r\n                            {!players.length\r\n                                ?   <p className=\"note mt-1\">игроков еще нет:(</p>\r\n                                :   <div>\r\n                                        {players.map(player => (\r\n                                            <p \r\n                                                key={Math.random()}\r\n                                                className=\"player-li\"\r\n                                            >\r\n                                                {player}\r\n                                            </p>\r\n                                        ))}\r\n                                    </div>\r\n                            }\r\n                            <div className=\"flex-row mt-3 gap-1 wrap\">\r\n                                <input\r\n                                    placeholder=\"добавьте нового игрока здесь\"\r\n                                    value={inputValue}\r\n                                    onChange={e => setInputValue(e.target.value)}\r\n                                />\r\n                                <Button onClick={addPlayer}>\r\n                                    Добавить\r\n                                </Button>\r\n                            </div>\r\n                            <Button \r\n                                onClick={removeAll}\r\n                                color=\"error\"\r\n                            >\r\n                                Удалить всех\r\n                            </Button>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"mt-3 play-buttons\">\r\n                            {gameType === 'custom' && (customQuestion.length === 0 || customAction.length === 0)\r\n                                ?   <div className=\"flex-row note gap-1\">\r\n                                        <Tooltip \r\n                                            title=\"Чтобы начать игру добавьте хотя бы 1 вопрос и действие или выберите другой тип вопросов\"\r\n                                            arrow\r\n                                        >\r\n                                            <Button \r\n                                                variant=\"contained\"\r\n                                                className=\"disabled\"\r\n                                            >\r\n                                                Играть!\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                        <Tooltip title=\"Вернуться в главное меню\" arrow>\r\n                                            <IconButton\r\n                                                className=\"nobg\"\r\n                                                onClick={() => {history(STARTPAGE_ROUTE); setFastType(false); if (showPenalty) setShowPenaltyDefault(false); if (showPenalty === false) setShowPenaltyDefault(true)}}\r\n                                            >\r\n                                                <HomeIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                :   <div className=\"flex-row note gap-1\">\r\n                                        <Button \r\n                                            variant=\"contained\"\r\n                                            onClick={() => startGame(true)}\r\n                                        >\r\n                                            Играть!\r\n                                        </Button>\r\n                                        <Tooltip title=\"Вернуться в главное меню\" arrow>\r\n                                            <IconButton\r\n                                                className=\"nobg\"\r\n                                                onClick={() => {history(STARTPAGE_ROUTE); setFastType(false); if (showPenalty) setShowPenaltyDefault(false); if (showPenalty === false) setShowPenaltyDefault(true)}}\r\n                                            >\r\n                                                <HomeIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Game;","import React, { useContext } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { STARTPAGE_ROUTE } from \"../../routes/consts\";\r\nimport { appContext } from \"../../context\";\r\nimport actions from \"../../static/actions.json\"\r\nimport questions from \"../../static/questions.json\"\r\nimport penaltys from \"../../static/penaltys.json\"\r\nimport whostart from \"../../static/whostart.json\"\r\nimport { modes } from \"../../static/modes\"\r\n\r\nconst AboutPage = () => {\r\n    const history = useNavigate();\r\n\r\n    const {setFastType, showPenalty, setShowPenaltyDefault} = useContext(appContext);\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"settings\">\r\n                <h1 className=\"title\">О проекте</h1>\r\n                <p className=\"p-big mt-1\">\r\n                    Данный сайт - это игра \"Правда или Действие\" (да, да), которую так сильно любят многие. \r\n                    <br />\r\n                    Мы имеем самую большую базу данных \"Правды\" и \"Действий\"\r\n                </p>\r\n                <h2 className=\"mt-4\">Статистика</h2>\r\n                <p className=\"note\">На данный момент на сайте:</p>\r\n                <div className=\"p-big mt-1\">\r\n                    {/* сделать подсчет автономным в независимости от количества */}\r\n                    <p>{questions.classic.length + questions.party.length} вопроса (\"правда\")</p>\r\n                    <p>{actions.classic.length + actions.party.length} действий</p>\r\n                    <p>{penaltys.light.length + penaltys.hard.length} наказаний (из них - {penaltys.light.length} легких и {penaltys.hard.length} тяжелых)</p>\r\n                    <p>{modes.length} режима игры</p>\r\n                    <p>{whostart.random.length} вариантов, кто будет начинать</p>\r\n                    <p className=\"note\">скоро - больше</p>\r\n                </div>\r\n                <h2 className=\"mt-4\">О содержании контента</h2>\r\n                <p className=\"p-big mt-1\">Все вопросы и действия придумывал автор сайта, все совпадения - случайны и не имеют отношения к контенту в интернете</p>\r\n                <h2 className=\"mt-4 mb-1\">Автор</h2>\r\n                <a \r\n                    href=\"https://github.com/roso1nik\" \r\n                    target=\"_blank\" \r\n                    rel=\"noreferrer noopener\"\r\n                >\r\n                    github@roso1nik\r\n                </a>\r\n                <div className=\"flex-row play-buttons mt-3\">\r\n                    <Button \r\n                        className=\"wfull\"\r\n                        onClick={() => {history(STARTPAGE_ROUTE); setFastType(false); if (showPenalty) setShowPenaltyDefault(false); if (showPenalty === false) setShowPenaltyDefault(true)}}\r\n                    >\r\n                        Играть\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport { ABOUT_ROUTE, ERROR_ROUTE, GAME_ROUTE, STARTPAGE_ROUTE } from \"./consts\";\r\nimport ErrorPage from \"../components/pages/ErrorPage\";\r\nimport Start from \"../components/pages/Start\";\r\nimport Game from '../components/pages/Game';\r\nimport AboutPage from '../components/pages/AboutPage';\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: STARTPAGE_ROUTE,\r\n        Component: <Start />\r\n    },\r\n    {\r\n        path: ERROR_ROUTE,\r\n        Component: <ErrorPage />\r\n    },\r\n    {\r\n        path: GAME_ROUTE,\r\n        Component: <Game />\r\n    },\r\n    {\r\n        path: ABOUT_ROUTE,\r\n        Component: <AboutPage />\r\n    }\r\n]","import React from \"react\";\r\nimport { Route, Routes, Navigate } from \"react-router-dom\";\r\nimport { publicRoutes } from \"../routes/routes\";\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Routes>\r\n            {publicRoutes.map(route => \r\n                <Route \r\n                    path={route.path}\r\n                    element={route.Component}\r\n                    key={route.path}\r\n                    exact={route.exact}\r\n                />\r\n            )}\r\n            <Route path=\"*\" element={<Navigate replace to=\"/\" />} /> {/* /error */}\r\n        </Routes>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import { Box, Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport ConstructionIcon from '@mui/icons-material/Construction';\r\nimport FeedbackIcon from '@mui/icons-material/Feedback';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport { ABOUT_ROUTE } from \"../../routes/consts\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst FooterOnPage = () => {\r\n    const history = useNavigate();\r\n    return (\r\n        <footer>\r\n            <Box\r\n                sx={{ my: 3 }}\r\n            >\r\n                <div className=\"flex-row note gap-2 feedback wrap\">\r\n                    {/* <Button\r\n                        variant=\"text\"\r\n                        className=\"flex-row tdn\"\r\n                        onClick={() => history(ABOUT_ROUTE)}\r\n                        startIcon={<ConstructionIcon />}\r\n                    >\r\n                        внести свой вклад\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        className=\"flex-row tdn\"\r\n                        onClick={() => history(ABOUT_ROUTE)}\r\n                        startIcon={<FeedbackIcon />}\r\n                    >\r\n                        отзыв\r\n                    </Button> */}\r\n                    <Button\r\n                        variant=\"text\"\r\n                        className=\"flex-row tdn\"\r\n                        onClick={() => history(ABOUT_ROUTE)}\r\n                        startIcon={<HelpOutlineIcon />}\r\n                    >\r\n                        о проекте\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        className=\"flex-row tdn\"\r\n                        onClick={() => window.open(\"https://github.com/roso1nik/truth-or-dare/releases\", \"_blank\")}\r\n                    >\r\n                        v1.1.2\r\n                    </Button>\r\n                </div>\r\n                <div className=\"flex-column note mt-1 aic_f\">\r\n                    <div className=\"flex-row\">\r\n                        <p>created by&nbsp;</p>\r\n                        <a href=\"https://github.com/roso1nik\" target=\"_blank\" rel=\"noreferrer noopener\">roso1nik</a>\r\n                    </div>\r\n                    <p className=\"note\">?ILNP❤</p>\r\n                </div>\r\n            </Box> \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default FooterOnPage;","import React, { useState } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport AppRouter from './components/AppRouter';\r\nimport { Container } from '@mui/material';\r\nimport { appContext } from \"./context/index\";\r\nimport FooterOnPage from './components/UI/FooterOnPage';\r\n\r\n\r\nconst App = () => {\r\n  const [fastType, setFastType] = useState(false);\r\n  const [gameType, setGameType] = useState('classic');\r\n  const [text, setText] = useState('');\r\n  const [textPenalty, setTextPenalty] = useState('');\r\n  const [textWhoStart, setWhoStart] = useState('Начинает самый старый игрок');\r\n  const [choose, setChoose] = useState('');\r\n  const [players, setPlayers] = useState([]);\r\n  const [penalty, setPenalty] = useState('none');\r\n  const [customQuestion, setCustomQuestion] = useState([]);\r\n  const [customAction, setCustomAction] = useState([]);\r\n  const [customPenalty, setCustomPenalty] = useState([]);\r\n  const [playerStepNow, setPlayerStepNow] = useState(-1);\r\n  const [showPenalty, setShowPenalty] = useState(false);\r\n  const [showPenaltyDefault, setShowPenaltyDefault] = useState(false)\r\n\r\n  return (\r\n    <appContext.Provider value={{\r\n      fastType,\r\n      setFastType,\r\n      gameType,\r\n      setGameType,\r\n      text,\r\n      setText,\r\n      textPenalty,\r\n      setTextPenalty,\r\n      textWhoStart, \r\n      setWhoStart,\r\n      choose,\r\n      setChoose,\r\n      players,\r\n      setPlayers,\r\n      penalty,\r\n      setPenalty,\r\n      customQuestion,\r\n      setCustomQuestion,\r\n      customAction,\r\n      setCustomAction,\r\n      customPenalty,\r\n      setCustomPenalty,\r\n      playerStepNow,\r\n      setPlayerStepNow,\r\n      showPenalty, \r\n      setShowPenalty,\r\n      showPenaltyDefault, \r\n      setShowPenaltyDefault\r\n    }}>\r\n      <BrowserRouter>\r\n        <Container maxWidth=\"lg\">\r\n          <AppRouter />\r\n          <FooterOnPage />\r\n        </Container>\r\n      </BrowserRouter>\r\n    </appContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './styles/App.css';\r\nimport './styles/index.css';\r\nimport './styles/root.css';\r\nimport './styles/media.css'\r\nimport App from './App';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />\r\n);\r\n"],"sourceRoot":""}